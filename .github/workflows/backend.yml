name: backend

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [22.x]

    services:
      postgres:
        image: postgres:15
        ports:
          - 5434:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        options: >-
          --health-cmd="pg_isready -U postgres -d testdb"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      NODE_ENV: test
      DB_HOST_TEST: localhost
      DB_PORT_TEST: 5434
      DB_USER_TEST: postgres
      DB_PASS_TEST: postgres
      DB_NAME_TEST: testdb

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Cachear dependencias npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Instalar dependencias
        run: npm ci

      - name: Ejecutar tests unitarios
        run: npm run test:unit

      - name: Ejecutar tests de integración
        run: npm run test:integration

  sonarcloud:
    if: github.ref == 'refs/heads/main'   
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          args: >
            -Dsonar.organization=${{ secrets.SONAR_ORGANISATION }}
            -Dsonar.projectKey= ${{ secrets.SONAR_PROJECT_KEY }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    needs: sonarcloud
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    env:
      DB_HOST: ${{ secrets.NEON_DB_HOST }}
      DB_USER: ${{ secrets.NEON_DB_USER }}
      DB_PASS: ${{ secrets.NEON_DB_PASS }}
      DB_NAME: ${{ secrets.NEON_DB_NAME }}
      DB_PORT: ${{ secrets.NEON_DB_PORT }}
      SVC_ID: a6778598-99b5-4a3a-826e-bf761cce1367
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Instalar Railway CLI
        run: npm install -g @railway/cli
        
      - name: Deploy to Railway
        run: railway up --service=${{ env.SVC_ID }}

  