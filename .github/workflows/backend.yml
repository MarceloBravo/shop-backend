name: backend

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    env:
          DB_USER_TEST: ${{ secrets.DB_USER_TEST }}
          DB_PASS_TEST: ${{ secrets.DB_PASS_TEST }}
          DB_NAME_TEST: ${{ secrets.DB_NAME_TEST }}
          DB_HOST_TEST: ${{ secrets.DB_HOST_TEST }}
          DB_PORT_TEST: ${{ secrets.DB_PORT_TEST }}
          NODE_ENV: test
    name: Test API en Node.js ${{ matrix.node }}
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        ports:
          - 5434:5432
        env:
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd="pg_isready -U $POSTGRES_USER -d $POSTGRES_DB" 
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

          
    strategy:
      matrix:
        node: [22.x]

    steps:
      - name: Checkout del código
        uses: actions/checkout@v3

      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}

      - name: Create test database
        run: PGPASSWORD=$POSTGRES_PASSWORD psql -h postgres -p 5432 -U $POSTGRES_USER -c "CREATE DATABASE $DB_NAME_TEST;"

      - name: Cachear dependencias npm
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Instalar dependencias
        run: npm ci

      - name: Ejecutar tests unitarios
        run: npm run test:unit

      - name: Ejecutar tests de integración
        run: npm run test:integration

      - name: Reportar éxito
        if: success()
        run: echo "API funcional en Node ${{ matrix.node }} (unitarios e integración OK)"

      - name: Reportar error
        if: failure()
        run: echo "Falla detectada en los tests para Node ${{ matrix.node }}"
  deploy:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy to Railway
        uses: railway/cli-action@v2
        with:
          railway_token: ${{ secrets.RAILWAY_TOKEN }}